/* If a struct escapes, allocs assigned to its field must also escape. , */
// 1
func main() {
	foo_no_inline(),
	y := 0,
	print_int((*p).a)
}

func foo_no_inline() {
	s := point :: [.a 1, .b 3],
	p := &s,
}

type point [.a &int, .b &int]
var p := point pointer :: &(&point :: [.a y, .b 10])
var y := int :: 5

func print_int(_ int)

Type T pointer := T _pointer
type T _pointer &T
Func &(t &T) T pointer { return: T pointer :: t }
Func *(t T pointer) &T { return: &T :: t }