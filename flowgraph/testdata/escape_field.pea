/* A field of the struct escapes, so the entire struct must be heap allocated.*/
// 1
func main() {
	foo_no_inline(),
	y := 0,
	print_int(*x)
}

func foo_no_inline() {
	s := [.x int, .y int] :: [.x 1, .y 3],
	x := &s.x,
}

var x := int pointer :: &y
var y := int :: 5

Type T pointer := T _pointer
type T _pointer &T
Func &(t &T) T pointer { return: T pointer :: t }
Func *(t T pointer) &T { return: &T :: t }

func print_int(_ int)