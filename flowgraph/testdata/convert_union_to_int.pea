// [a?] [b?] [c?]
// [a?] [b?] [c?]
func main() {
	a := [a?] :: [a?],
	print_a_or_b_or_c_no_inline(a_or_b_or_c :: a),
	print(" "),
	b := [b?] :: [b?],
	print_a_or_b_or_c_no_inline(a_or_b_or_c :: b),
	print(" "),
	c := [c?] :: [c?],
	print_a_or_b_or_c_no_inline(a_or_b_or_c :: c),

	print("\n"),

	aa := [b?, a?] :: [a?],
	print_a_or_b_or_c_no_inline(a_or_b_or_c :: aa),
	print(" "),
	bb := [c?, b?] :: [b?],
	print_a_or_b_or_c_no_inline(a_or_b_or_c :: bb),
	print(" "),
	cc := [c?, b?, a?] :: [c?],
	print_a_or_b_or_c_no_inline(a_or_b_or_c :: cc)
}

type a_or_b_or_c [a?, b?, c?]

func print_a_or_b_or_c_no_inline(x a_or_b_or_c) {
	x a? {
		print("[a?]")
	} b? {
		print("[b?]")
	} c? {
		print("[c?]")
	}
}

func print_int(_ int)
